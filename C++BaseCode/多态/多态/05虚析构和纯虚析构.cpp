//#include<iostream>
//using namespace std;
//#include <string>
////虚析构和纯虚析构
//
//class Animal
//{
//public:
//	Animal()
//	{
//		cout<<"Animal构造函数调用"<<endl;
//	}
//	//利用虚析构可以解决 父类指针释放子类对象时不干净的问题
//	//virtual ~Animal()
//	//{
//	//	cout<<"Animal虚析构函数调用"<<endl;
//	//}
//
//	//纯虚析构 需要声明也需要实现
//	virtual ~Animal()=0;
//	//纯虚函数
//	virtual void speak()=0;
//
//};
////纯虚析构
//Animal::~Animal()
//{
//	cout<<"Animal纯虚析构函数调用"<<endl;
//}
//
//class Cat:public Animal
//{
//public:
//	Cat(string name)
//	{
//		cout<<"Cat的构造函数调用"<<endl;
//		m_Name= new string(name);
//	}
//	~Cat()
//	{
//		if (m_Name!=NULL)
//		{
//			cout<<"Cat析构函数的调用"<<endl;
//			delete m_Name;
//			m_Name=NULL;
//		}
//	}
//	virtual void speak()
//	{
//		cout<<*m_Name<<"小猫在说话"<<endl;
//	}
//
//	string *m_Name;
//};
//
//void test01()
//{
//	Animal *animal=new Cat("Tom");
//	animal->speak();
//	//父类指针在析构时候 不会调用子类中的析构函数
//	delete animal;
//}
//
//int main()
//{
//	test01();
//
//	system("pause");
//	return 0;
//}